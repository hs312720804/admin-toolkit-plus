(self.webpackChunk_ccprivate_admin_toolkit_plus=self.webpackChunk_ccprivate_admin_toolkit_plus||[]).push([[3756],{7194:(n,a,s)=>{"use strict";s.r(a),s.d(a,{data:()=>t});const t={key:"v-0ed04da6",path:"/components/SelectChange.html",title:"条件选择",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"示例",slug:"示例",children:[{level:3,title:"效果",slug:"效果",children:[]}]},{level:2,title:"属性",slug:"属性",children:[]}],filePathRelative:"components/SelectChange.md",git:{updatedTime:1632567839e3,contributors:[{name:"wanghaihua",email:"wanghaihua@coocaa.com",commits:3}]}}},7917:(n,a,s)=>{"use strict";s.r(a),s.d(a,{default:()=>l});var t=s(6252);const p=(0,t.uE)('<h1 id="条件选择"><a class="header-anchor" href="#条件选择">#</a> 条件选择</h1><p><code>c-select-change</code> 不限条件及单个选取</p><h2 id="示例"><a class="header-anchor" href="#示例">#</a> 示例</h2><h3 id="效果"><a class="header-anchor" href="#效果">#</a> 效果</h3>',4),e=(0,t.uE)(' ### 代码 <div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>c-select-change</span>\n      <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkedList<span class="token punctuation">&quot;</span></span>\n      <span class="token attr-name">:dataList</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dataList<span class="token punctuation">&quot;</span></span>\n      <span class="token attr-name">allText</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>不限<span class="token punctuation">&quot;</span></span>\n      <span class="token attr-name">labelKey</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span>\n      <span class="token attr-name">valKey</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span>\n    <span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>c-select-change</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token function">data</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      checkedList<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      dataList<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;腾讯源&#39;</span><span class="token punctuation">,</span> id<span class="token operator">:</span> <span class="token string">&#39;1&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;爱奇艺源&#39;</span><span class="token punctuation">,</span> id<span class="token operator">:</span> <span class="token string">&#39;2&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;优酷源&#39;</span><span class="token punctuation">,</span> id<span class="token operator">:</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> isShow<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;芒果TV源&#39;</span><span class="token punctuation">,</span> id<span class="token operator">:</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> disabled<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>\n      <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylus<span class="token punctuation">&quot;</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h2 id="属性"><a class="header-anchor" href="#属性">#</a> 属性</h2><table><thead><tr><th>名称</th><th>类型</th><th>描述</th><th>例子</th></tr></thead><tbody><tr><td>DataList</td><td>Array</td><td>传过去的数组数据</td><td>见上面例子</td></tr><tr><td>allText</td><td>Array</td><td>不限条件显示的文本，不传则不显示</td><td>见上面例子</td></tr><tr><td>allTextVal</td><td></td><td>不限条件的 label 值</td><td>默认 0</td></tr><tr><td>labelKey</td><td>String</td><td>选中的数据对应的属性</td><td>见上面例子</td></tr><tr><td>valKey</td><td>String</td><td>展示的数值对应的属性</td><td>见上面例子</td></tr><tr><td>allBtnCheck</td><td>Boolean</td><td>所传数组与选中的数值一致时是否选中为不限按钮</td><td>true-选中，false-不选中，默认为 false。如例子所示</td></tr><tr><td>disabled</td><td>Boolean</td><td>当前数据按钮是否禁用</td><td>true-禁用，false-不禁用，默认为 false</td></tr></tbody></table>',4),l={render:function(n,a){const s=(0,t.up)("SelectChangeDemo"),l=(0,t.up)("Demo"),c=(0,t.up)("ClientOnly");return(0,t.wg)(),(0,t.j4)(t.HY,null,[p,(0,t.Wm)(c,null,{default:(0,t.w5)((()=>[(0,t.Wm)(l,null,{default:(0,t.w5)((()=>[(0,t.Wm)(s)])),_:1})])),_:1}),e],64)}}}}]);