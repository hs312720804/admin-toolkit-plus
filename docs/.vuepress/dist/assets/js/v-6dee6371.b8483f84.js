(self.webpackChunk_ccprivate_admin_toolkit_plus=self.webpackChunk_ccprivate_admin_toolkit_plus||[]).push([[1176],{6697:(n,a,s)=>{"use strict";s.r(a),s.d(a,{data:()=>t});const t={key:"v-6dee6371",path:"/components/InputPosibility.html",title:"概率输入",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"示例",slug:"示例",children:[]},{level:2,title:"属性",slug:"属性",children:[]}],filePathRelative:"components/InputPosibility.md",git:{updatedTime:1632567839e3,contributors:[{name:"wanghaihua",email:"wanghaihua@coocaa.com",commits:4}]}}},5749:(n,a,s)=>{"use strict";s.r(a),s.d(a,{default:()=>o});var t=s(6252);const p=(0,t.Wm)("h1",{id:"概率输入"},[(0,t.Wm)("a",{class:"header-anchor",href:"#概率输入"},"#"),(0,t.Uk)(" 概率输入")],-1),e=(0,t.Wm)("p",null,[(0,t.Wm)("code",null,"c-input-posibility"),(0,t.Uk)(" 只能输入区间为 [0, 1] 的数字的输入组件")],-1),l=(0,t.Wm)("h2",{id:"示例"},[(0,t.Wm)("a",{class:"header-anchor",href:"#示例"},"#"),(0,t.Uk)(" 示例")],-1),c=(0,t.uE)(' ### 代码 <div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>c-input-posibility</span>\n    <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ruleForm.rate<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">:is-restrict-num</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">:decimals-length</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>请输入概率<span class="token punctuation">&quot;</span></span>\n  <span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token function">data</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      ruleForm<span class="token operator">:</span> <span class="token punctuation">{</span>\n        rate<span class="token operator">:</span> <span class="token string">&#39;&#39;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="属性"><a class="header-anchor" href="#属性">#</a> 属性</h2><table><thead><tr><th>名称</th><th>类型</th><th>描述</th><th>例子</th></tr></thead><tbody><tr><td>value</td><td>Number, String</td><td></td><td></td></tr><tr><td>disabled</td><td>Boolean</td><td></td><td></td></tr><tr><td>placeholder</td><td>String</td><td></td><td></td></tr><tr><td>append</td><td>String</td><td></td><td></td></tr><tr><td>prepend</td><td>String</td><td></td><td></td></tr><tr><td>is-restrict-num</td><td>Boolean</td><td>是否为准确的小数位，如果为 true， decimals-length 必填</td><td></td></tr><tr><td>decimals-length</td><td>Number</td><td>几位小数</td><td></td></tr></tbody></table>',4),o={render:function(n,a){const s=(0,t.up)("InputPosibilityDemo"),o=(0,t.up)("Demo"),u=(0,t.up)("ClientOnly");return(0,t.wg)(),(0,t.j4)(t.HY,null,[p,e,l,(0,t.Wm)(u,null,{default:(0,t.w5)((()=>[(0,t.Wm)(o,null,{default:(0,t.w5)((()=>[(0,t.Wm)(s)])),_:1})])),_:1}),c],64)}}}}]);